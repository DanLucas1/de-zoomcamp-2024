import pyarrow as pa
from google.cloud import bigquery

pa_schemas = {
    'yellow': pa.schema([
        ('pickup_date', pa.date32()),        
        ('vendor_id', pa.int64()),
        ('tpep_pickup_datetime', pa.timestamp('ns')),
        ('tpep_dropoff_datetime', pa.timestamp('ns')),
        ('passenger_count', pa.float64()),
        ('trip_distance', pa.float64()),
        ('pu_location_id', pa.int64()),
        ('do_location_id', pa.int64()),
        ('ratecode_id', pa.int64()),
        ('store_and_fwd_flag', pa.int64()),
        ('payment_type', pa.int64()),
        ('fare_amount', pa.float64()),
        ('extra', pa.float64()),
        ('mta_tax', pa.float64()),
        ('improvement_surcharge', pa.float64()),
        ('tip_amount', pa.float64()),
        ('tolls_amount', pa.float64()),
        ('total_amount', pa.float64()),
        ('congestion_surcharge', pa.float64()),
        ('airport_fee', pa.float64())]),
    'green': pa.schema([
        ('pickup_date', pa.date32()),        
        ('vendor_id', pa.int64()),
        ('lpep_pickup_datetime', pa.timestamp('ns')),
        ('lpep_dropoff_datetime', pa.timestamp('ns')),
        ('store_and_fwd_flag', pa.int64()),
        ('ratecode_id', pa.int64()),
        ('pu_location_id', pa.int64()),
        ('do_location_id', pa.int64()),
        ('passenger_count', pa.float64()),
        ('trip_distance', pa.float64()),
        ('fare_amount', pa.float64()),
        ('extra', pa.float64()),
        ('mta_tax', pa.float64()),
        ('tip_amount', pa.float64()),
        ('tolls_amount', pa.float64()),
        ('ehail_fee', pa.float64()),
        ('improvement_surcharge', pa.float64()),
        ('total_amount', pa.float64()),
        ('payment_type', pa.int64()),
        ('trip_type', pa.int64()),
        ('congestion_surcharge', pa.float64())]),
    'fhv': pa.schema([
        ('pickup_date', pa.date32()),        
        ('dispatching_base_num', 'STRING'),
        ('pickup_datetime', pa.timestamp('ns')),
        ('dropoff_datetime', pa.timestamp('ns')),
        ('pu_location_id', pa.int64()),
        ('do_location_id', pa.int64()),
        ('sr_flag', pa.float64()),
        ('affiliated_base_number', 'STRING')])
}


# define bigquery schemas for each taxi_type
bq_schemas = {
    'yellow': [
        bigquery.SchemaField('vendor_id', 'INTEGER'),
        bigquery.SchemaField('tpep_pickup_datetime', 'TIMESTAMP'),
        bigquery.SchemaField('tpep_dropoff_datetime', 'TIMESTAMP'),
        bigquery.SchemaField('passenger_count', 'FLOAT'),
        bigquery.SchemaField('trip_distance', 'FLOAT'),
        bigquery.SchemaField('pu_location_id', 'INTEGER'),
        bigquery.SchemaField('do_location_id', 'INTEGER'),
        bigquery.SchemaField('ratecode_id', 'INTEGER'),
        bigquery.SchemaField('store_and_fwd_flag', 'INTEGER'),
        bigquery.SchemaField('payment_type', 'INTEGER'),
        bigquery.SchemaField('fare_amount', 'FLOAT'),
        bigquery.SchemaField('extra', 'FLOAT'),
        bigquery.SchemaField('mta_tax', 'FLOAT'),
        bigquery.SchemaField('improvement_surcharge', 'FLOAT'),
        bigquery.SchemaField('tip_amount', 'FLOAT'),
        bigquery.SchemaField('tolls_amount', 'FLOAT'),
        bigquery.SchemaField('total_amount', 'FLOAT'),
        bigquery.SchemaField('congestion_surcharge', 'FLOAT'),
        bigquery.SchemaField('airport_fee', 'FLOAT')
    ],
    'green': [
        bigquery.SchemaField('vendor_id', 'INTEGER'),
        bigquery.SchemaField('lpep_pickup_datetime', 'TIMESTAMP'),
        bigquery.SchemaField('lpep_dropoff_datetime', 'TIMESTAMP'),
        bigquery.SchemaField('store_and_fwd_flag', 'INTEGER'),
        bigquery.SchemaField('ratecode_id', 'INTEGER'),
        bigquery.SchemaField('pu_location_id', 'INTEGER'),
        bigquery.SchemaField('do_location_id', 'INTEGER'),
        bigquery.SchemaField('passenger_count', 'FLOAT'),
        bigquery.SchemaField('trip_distance', 'FLOAT'),
        bigquery.SchemaField('fare_amount', 'FLOAT'),
        bigquery.SchemaField('extra', 'FLOAT'),
        bigquery.SchemaField('mta_tax', 'FLOAT'),
        bigquery.SchemaField('tip_amount', 'FLOAT'),
        bigquery.SchemaField('tolls_amount', 'FLOAT'),
        bigquery.SchemaField('ehail_fee', 'FLOAT'),
        bigquery.SchemaField('improvement_surcharge', 'FLOAT'),
        bigquery.SchemaField('total_amount', 'FLOAT'),
        bigquery.SchemaField('payment_type', 'INTEGER'),
        bigquery.SchemaField('trip_type', 'INTEGER'),
        bigquery.SchemaField('congestion_surcharge', 'FLOAT')
    ],
    'fhv': [
        bigquery.SchemaField('dispatching_base_num', 'STRING'),
        bigquery.SchemaField('pickup_datetime', 'TIMESTAMP'),
        bigquery.SchemaField('dropoff_datetime', 'TIMESTAMP'),
        bigquery.SchemaField('pu_location_id', 'INTEGER'),
        bigquery.SchemaField('do_location_id', 'INTEGER'),
        bigquery.SchemaField('sr_flag', 'FLOAT'),
        bigquery.SchemaField('affiliated_base_number', 'STRING')
    ]
}

pd_dtypes = {
    'yellow': {
        'vendor_id': 'Int32',
        'tpep_pickup_datetime': 'datetime64[ns]',
        'tpep_dropoff_datetime': 'datetime64[ns]',
        'passenger_count': 'float64',
        'trip_distance': 'float64',
        'pu_location_id': 'Int32',
        'do_location_id': 'Int32',
        'ratecode_id': 'Int32',
        'store_and_fwd_flag': 'Int32',
        'payment_type': 'Int32',
        'fare_amount': 'float64',
        'extra': 'float64',
        'mta_tax': 'float64',
        'improvement_surcharge': 'float64',
        'tip_amount': 'float64',
        'tolls_amount': 'float64',
        'total_amount': 'float64',
        'congestion_surcharge': 'float64',
        'airport_fee': 'float64'
    },

    'green': {
        'vendor_id': 'Int32',
        'lpep_pickup_datetime': 'datetime64[ns]',
        'lpep_dropoff_datetime': 'datetime64[ns]',
        'store_and_fwd_flag': 'Int32',
        'ratecode_id': 'Int32',
        'pu_location_id': 'Int32',
        'do_location_id': 'Int32',
        'passenger_count': 'float64',
        'trip_distance': 'float64',
        'fare_amount': 'float64',
        'extra': 'float64',
        'mta_tax': 'float64',
        'tip_amount': 'float64',
        'tolls_amount': 'float64',
        'ehail_fee': 'float64',
        'improvement_surcharge': 'float64',
        'total_amount': 'float64',
        'payment_type': 'Int32',
        'trip_type': 'Int32',
        'congestion_surcharge': 'float64'
    },

    'fhv': {
        'dispatching_base_num': 'object',
        'pickup_datetime': 'datetime64[ns]',
        'dropoff_datetime': 'datetime64[ns]',
        'pu_location_id': 'Int32',
        'do_location_id': 'Int32',
        'sr_flag': 'float64',
        'affiliated_base_number': 'object'
    }}